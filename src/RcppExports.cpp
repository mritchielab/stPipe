// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// RunDemultiplex
void RunDemultiplex(const char* read_1_fq_path, const char* read_2_fq_path, const char* h5_mapping_path, const char* output_fq_path, int n_reads, int coord_bc_start, int coord_bc_len, int umi_start, int umi_len, int bin_size);
RcppExport SEXP _stPipe_RunDemultiplex(SEXP read_1_fq_pathSEXP, SEXP read_2_fq_pathSEXP, SEXP h5_mapping_pathSEXP, SEXP output_fq_pathSEXP, SEXP n_readsSEXP, SEXP coord_bc_startSEXP, SEXP coord_bc_lenSEXP, SEXP umi_startSEXP, SEXP umi_lenSEXP, SEXP bin_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const char* >::type read_1_fq_path(read_1_fq_pathSEXP);
    Rcpp::traits::input_parameter< const char* >::type read_2_fq_path(read_2_fq_pathSEXP);
    Rcpp::traits::input_parameter< const char* >::type h5_mapping_path(h5_mapping_pathSEXP);
    Rcpp::traits::input_parameter< const char* >::type output_fq_path(output_fq_pathSEXP);
    Rcpp::traits::input_parameter< int >::type n_reads(n_readsSEXP);
    Rcpp::traits::input_parameter< int >::type coord_bc_start(coord_bc_startSEXP);
    Rcpp::traits::input_parameter< int >::type coord_bc_len(coord_bc_lenSEXP);
    Rcpp::traits::input_parameter< int >::type umi_start(umi_startSEXP);
    Rcpp::traits::input_parameter< int >::type umi_len(umi_lenSEXP);
    Rcpp::traits::input_parameter< int >::type bin_size(bin_sizeSEXP);
    RunDemultiplex(read_1_fq_path, read_2_fq_path, h5_mapping_path, output_fq_path, n_reads, coord_bc_start, coord_bc_len, umi_start, umi_len, bin_size);
    return R_NilValue;
END_RCPP
}

RcppExport SEXP run_testthat_tests(SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_stPipe_RunDemultiplex", (DL_FUNC) &_stPipe_RunDemultiplex, 10},
    {"run_testthat_tests", (DL_FUNC) &run_testthat_tests, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_stPipe(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
